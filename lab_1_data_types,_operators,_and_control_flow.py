# -*- coding: utf-8 -*-
"""Lab_1_Data Types, Operators, and Control flow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KKOW56CER1fptlpovSBmhkfLs4q5Vmv7

# Data Types and Operators

##### Some few things to note
1. case sensitive
2. spacing
3. errors
4. print function
5. variable naming
"""

print(2)
print(24)

"""### Variables naming

Variable naming:

* Use small letters and underscores and numbers where necessary
* Use meaningful names
* Do not allow space (s) in variable names
* Do not begin variables with numbers
* Do not use numbers alone as variable names
* Do not use python reserved words as a variable name

learn more on the internet about variable naming
"""

students_names = ['Kelden','Dominic','Aurelia','Jessie','Jessica']



students_names

print(students_names)

students_name = 'Samuel'

Students_name = "Benard" # This wrong variable naming , the s shoudn't capitalized

students_name

Students_name

x = 24+45+56+7+8+90+2
x/6
print(f"The  average mark is {x/5} ") #-----> this is string literals

students_names = ['Ama','Teye','Kofi']
print(students_names)

#students names = ['Ama','Teye','Kofi'] #----> It is wrong to bring a space in a variable name

"""### Arithmetric Operators

|Operator||Action|
|----||----|
|+||addition|
|-||subtraction|
|*||multiplication|
|/|| divsion|
|\**||exponential|
|%||modulo|
|\//|| integer division|
"""

3+4

50-4

5*4

5**3

5^3 # note: the ^ sign does not mean exponential in python. Kindly use **

print(5*3)
print(5**3)

print(7/2)# division
print(7%2) # modulo
print(7//2)# integer division

"""### Assignment operators

Assignment operators
1. '='

2. 'operator='

eg: +=
"""

#Examples
x = 45
y = 50
z = 30

x

y

z

class_scores = [20,34,43,12,15]
print(class_scores)

a,b,c = 13,55,29

a

b

c

x+2

x

print(x)
x = x+2
print(x)

x

#x=x+2

x+=2  # x+2 and assign it back to x. This the as writing x = x+2

x

s = 75

s = s+5

s

s+=5

s



s*=3

s

x += 3
print(x)

x*=2
print(x)

x -= 10
print(x)

num  = 79
print(num)

num = num +10

num += 10
print(num)



sampson = 85

sampson

sampson+3

sampson

sampson+=3

sampson

a = 4

a = a+2

a

a+=1

a

a+=1

a

"""### Integers and floats

Integers: positive or negative whole numbers

Floats: decimals or floating points

In python, integers are represented by "int" and floats are represented by "float"

You can check the variable type using the in-built function "type()"

You can also change a variable from one type to the other.
"""

# Examples
age = 45                            
income = 578.64

# use the type() function to check for variable type
print(type(age))
print(type(income))

age_float = float(age) # float()
print(age_float)

income_int = int(income)
print(income_int)
print(type(income_int))

"""### Booleans
* True (T)
* False (F)

Booleans are represented as  'bool' in python

Python assigns the value '1' and '0' to True and False respectively

"""

a = True + True + True + False

a



"""### Comparison operators

|Operator||Meaning|
|----||----|
|<||less than|
|>||greater than|
|<=||less than or equals to|
|>=||greater than or equals to|
|==||equals to|
|!=|| not equals to|

### Logical Operators

|Operator||Action|
|----||----|
|and(&)||evaluates if both sides are True|
|or(\|)||evaluates if at least one side is True|
|not||inverses a boolean|
"""

# Examples
statement_1 = True

statement_2 = False

statement_1 or statement_2

not(statement_1)

7 > 5

75.34 < 45.67<50 # False and  # True = False

75.34 < 45.67  and 45.67<50

# Benard is a Banker and Benard is a male

# True                       True  = True

2>1 and 3<4    #True and True

# Black Stars qualified for CAN 2008 or  Black Stars qualified the world cup (2008)
# False                                    False     = False

not(2>3)

3 < 5

"""###  'and' logical operator"""

7 > 5 and 3 < 5 # logical and operator yields true only and only if condition 1 and condition 2 yields true
                # other wise, it yieds false

7 < 5 and 3 < 5 #False and True

7 > 5 and 3 > 5 #True and False

7 == 5 and 3 > 5 # False and False

"""### 'or' operator"""

# The or operator yields False only and only if condition 1 and condition 2 yields false
# other wise, it yieds True
# Check the examples below

#eg 1
100 <200 or 100 <50
# True    or   False = True

"""#### Explanation of eg 1"""

100 <200 # condition 1 yields True

100 <50 ## condition 2 yields False

"""Since condition 1 is True and condition 2 is False, the whole expression is True based on the or operator"""

#eg_2
100 <200 or 100 >50 # since both are true, the whole expression is true based on the or operator

#eg 3
100 >200 or 100 <50 # since both conditions are False, the whole expression is False based on the or operator

"""### not logical operator"""

not(100 >200 or 100 <50) # The not negates the boolean.It turns True to False and False to True

2<6

not(2<6)

6>10

not(6>10)

"""### more examples"""

x = 40+50+10
y = 120
print(x)
print(y)

z = (34+45+12)-30 *2
print(z)

print(x)
print(y)
print(z)

x == y and x < z
# left side = False
# right side  = False
#False

x < y and x < z 
# left side = True
#right side  = False
# False

x < y and x > z
# left side = True
#right side  = True
# True

x == y or x < z
# left side = False
#right side  = False
# False

x < y or x < z

x < y or x > z





"""### Strings

Strings are immutable ordered sequence of characters.

The characters could be letters,numbers,spaces,sentence and even symbols.

srings are indicated in python with  ' ' or " "

'str' also means string in python

### String operations
"""

# Examples
sentence  = 'Solomon is a wise man'
print(sentence)
print(type(sentence))

string = '' # empty
print(string)
print(type(string))

a = "Daniel"

print(a)
print(type(a))

x = "2#@$%#^7&"
print(x)
print(type(x))

print(a+" "+"is"+" "+"going"+" "+ "to"+" "+ "school")

print(a+" " +"is going to school")

b = "Benin"

"""#### String concatenation"""

a+b # concatenation

string = "" #empty string

string+='John'

string

string+='Ama'

string

statement = "It's mine"
print(statement)

stament_2 = 'Daniel said "he has gotten it"'

stament_2





h = 'Hello!'
w = 'world'

h+w

print(h)
print(w)
a = h + ' '+ w
print(a)

a

"""#### String multiplication"""

"a"*3

print((h+w)*3)

print('-'*110)

"""### String indexing"""

j = 'Jemimah said"it\'s mine"'

j

x = "Hello world"

x[0]

len(x)

x[0:3] #Note that python excludes upper boundries

x[2:6]

x[0]

x[1]

x[7]

x[10]





x[-1]

x[-2]

x[::-1]

#string indexing
#Before doing indexing in python, note that python starts counting from zero not one



h[0]

h[1]

# Hello!

h[0:3] # note: indexing in python includes the first boundary and excludes the last buondary
       # so in this case, the thier 3rd index is excluded

h[:5]

h[1:4]

h[-1] # using negative numbers in indexing starts from the end to the beginning

h[-2]

h[-3]

h[-3:5]

h[-3:]

name = 'Sampson'

name[6]

name[-1]

name[-2]

"""### methods"""

x = "Hello world"

x.count('o')

x.count('l')

'2322437'.count('2')

print(x.islower())

x.isupper()

x.istitle()

x.islower() or x.isupper()

x.upper()

x

z = x.upper()

z





print(w.isupper())

w.upper()

w.title()

w.index('o')



sentence = 'There is a module called string that contains, among other things,...'

sentence.split(sep="m")

sentence.split(sep = ',')

sentence.split()

statement_1 ="It's time for lunch"

statement_1

statement_1.split(sep= "o")

"""## String formatting"""

print('{} is a good {} but he can {}'.format('Henry','Man','be tricky'))

a = 23.60* 0.225

a

print('The tip is {}'.format(a))

print('The tip is {:.2f}'.format(a))

a = 23.60* 0.225

print('The tip is {:.3f}'.format(a))

bill = 23.60
tip = 23.60*.25
total = bill+tip
print('Tip: ${:.2f}, Total: ${:.2f}'.format(tip, total))

bill = 23.60
tip = 23.60*.25
total = bill+tip
print('Total: ${:.2f}, Tip: ${}'.format(tip,total))

bill = 23.60
tip = 23.60*.25
total = bill+tip
print('Total: ${1:.2f}, Tip: ${0}'.format(tip,total))



print('{:,d}'.format(100000000))

print('${:,d}'.format(5000))

"""### The ^ ,<, > characters center, left and right-justify"""

print('{}'.format('Hi'))
print()
print('{:^100s}'.format('Hi'))
print()
print('{:^10s}'.format('there!'))

print('{:>10s}'.format('Hi'))
print('{:<10s}'.format('Hi'))
# s = white space

print('{:^20s}'.format('Hi'))
print('{:^40s}'.format('there!'))
print('{:^60s}'.format('Hi'))
print('{:^80s}'.format('there!'))
print('{:^100s}'.format('Hi'))
print('{:^120s}'.format('there!'))

"""### To learn about string formatting, just search for string formatting with python

## Input and output
"""

input('Enter your name:')

name = input('Student  Name:')
print('{} is a nice name!'.format(name))

float()
int()

input("Enter your height in meters  ")

height = float(input("Enter your height in meters  "))

weight = float(input("Enter your weight in kg  "))
bmi = weight/height**2
print('Your hieght is {} meters and your weight is {} kg therefore your bmi is {:.2f}'.format(height,weight,bmi))

"""## Control flow"""

if, elif,else

"""### if"""

#demonstration with if
phone_balance = 10
momo_balance = 500

if phone_balance <= 5:    
    phone_balance += 10
    momo_balance -= 10
    
print(phone_balance)
print(momo_balance)

"""### if and else"""

#demonstration with if and else
phone_balance = 2
momo_balance = 500

if phone_balance <= 5:    
    phone_balance += 10
    momo_balance -= 10
    print(phone_balance)
    print(momo_balance)
    print('Congratulations!, you have sucessfully purchased 10 cedis credit')
else:
    print('Your current balance is greater than 5 cedis')

"""### Task 1
write a block of code that allows you to buy credit as input from your momo balance and print out:

1. the amount bought

2. the current credit balance

3. the current momobalance
(hint: you can include string formatting or string literals)

### Task 2

(a) Write a block of code that accepts Ghaha cedis as input and  converts it to US dollors.

(b) Write a block of code that accepts  US dollors as input and  converts it to Ghaha cedis.

### 3 Task 3

Modify the code below to accept age as input.
"""

age = 45

free_up_to_age = 4
child_up_to_age = 18
senior_from_age = 65

concession_ticket = 1.25
adult_ticket = 2.50

if age <= free_up_to_age:
    ticket_price = 0
elif age <= child_up_to_age:
    ticket_price = concession_ticket
elif age >= senior_from_age:
    ticket_price = concession_ticket
else:
    ticket_price = adult_ticket
message = 'You are {} years old so you will pay ${} to ride the bus.'.format(age,ticket_price)
print(message)

#Eg.2 demonstration with if and else
number = 4
if number % 2 == 0:
    print('Number'+' '+str(number)+' '+'is even.' )
else:
    print('Number'+' '+str(number)+' '+ 'is odd.')

"""### if, elif, and else"""

#demonstration with if,elif and else
age = 45

free_up_to_age = 4
child_up_to_age = 18
senior_from_age = 65

concession_ticket = 1.25
adult_ticket = 2.50

if age <= free_up_to_age:
    ticket_price = 0
elif age <= child_up_to_age:
    ticket_price = concession_ticket
elif age >= senior_from_age:
    ticket_price = concession_ticket
else:
    ticket_price = adult_ticket
message = 'You are {} years old so you will pay ${} to ride the bus.'.format(age,ticket_price)
print(message)



"""### Nested conditions


"""

x = float(input("Enter a number for x: "))
y = float(input("Enter a number for y: "))

if x == y:
    print("x and y are equal")
    
    if y != 0:
        print("x/y is possible. x/y =",x/y)
    else:
        print("y = 0")  
        
elif x < y:
    print("x is smaller")
    
elif x > y:
    print("x is greater") 
print("Thanks")





